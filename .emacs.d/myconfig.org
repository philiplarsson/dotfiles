#+TITLE: Emacs configuration
#+DESCRIPTION: An org-babel based emacs configuration
#+LANGUAGE: en
#+PROPERTY: results silent

* Font
#+BEGIN_SRC emacs-lisp
(set-frame-font "Source Code Variable 14" nil t)

;; Add linespacing
(setq-default line-spacing 6)
#+END_SRC

* General Settings

#+BEGIN_SRC emacs-lisp
;; Mac settings.
;; Will enable brackets and square brackets, among other things.
(when (eq system-type 'darwin)
(setq mac-option-modifier nil
  mac-command-modifier 'meta              ;; use cmd as meta/alt
  select-enable-clipboard t))             ;; cut and paste uses clipboard

;; Allow y and n instead of yes and no
(fset 'yes-or-no-p 'y-or-n-p)

;; Disable bell
(setq visible-bell 1)

;; Save backups in emacs-backups folder
(setq backup-directory-alist '(("." . "~/.emacs.d/backups")))
;; Disk space is cheap. Save lots.
(setq delete-old-versions -1)
(setq version-control t)
(setq vc-make-backup-files t)

;; Remove Toolbar
(tool-bar-mode -1)

;; Highlight Parenthesis
(show-paren-mode t)

;; Remove Scrollbar
(scroll-bar-mode -1)

;; Sort apropos results by relevancy
(setq apropos-sort-by-scores t)

;; Show current column in the mode line
(setq column-number-mode t)

;; Use zap-up-to-char instead of zap-to-char
(global-set-key "\M-z" 'zap-up-to-char)
#+END_SRC

* IDO Mode
Introduction [[https://www.masteringemacs.org/article/introduction-to-ido-mode][here]].
Enable basic Ido support for files and buffers and the very useful “flex matching” as well.

#+BEGIN_SRC emacs-lisp
(setq ido-enable-flex-matching t)
(setq ido-everywhere t)
(ido-mode 1)
(defalias 'list-buffers 'ibuffer)    ; use ibuffer as default
#+END_SRC
* Theme

#+BEGIN_SRC emacs-lisp
(use-package nimbus-theme
  :ensure t)
#+END_SRC
* Plugins
** Which key
#+BEGIN_QUOTE
which-key is a minor mode for Emacs that displays the key bindings following your currently entered incomplete command (a prefix) in a popup.
#+END_QUOTE

#+BEGIN_SRC emacs-lisp
(use-package which-key
  :ensure t
  :config (which-key-mode))
#+END_SRC
** Ace Window
[[https://github.com/abo-abo/ace-window][Ace-window]] helps with selecting a window when there is more than 2.

#+BEGIN_SRC emacs-lisp
(use-package ace-window
  :ensure t
  :bind ("M-o" . ace-window)
  :config
  (custom-set-faces
    '(aw-leading-char-face
     ((t (:inherit ace-jump-face-foreground :height 2.0)))))
)
#+END_SRC

** Avy
[[https://github.com/abo-abo/avy][Avy]] is a package for jumping to things.

#+BEGIN_SRC emacs-lisp
(use-package avy
  :ensure t
  :bind ("C-c C-SPC" . avy-goto-word-or-subword-1))
#+END_SRC

** htmlize
[[https://github.com/hniksic/emacs-htmlize][emacs-htmlize]] seems to be needed for some files to be converted to html.

#+BEGIN_SRC emacs-lisp
(use-package htmlize
  :ensure t)
#+END_SRC
* Keybindings
** General Keybindings

#+BEGIN_SRC emacs-lisp
;; Toggle fullscreen
(global-set-key (kbd "C-c F") 'toggle-frame-fullscreen)

;; Prefer backward-kill-word over Backspace
(global-set-key "\C-w" 'backward-kill-word)
(global-set-key "\C-x\C-k" 'kill-region)
#+END_SRC



